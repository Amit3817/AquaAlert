const express = require("express");
const authController = require("../controller/authController");
const { body } = require("express-validator");
const tokenverify = require("../middleware/isauth");
const mailer = require("../middleware/mailer");

const router = express.Router();

router.post(
  "/signup",
  [
    body("email")
      .isEmail()
      .withMessage("Please enter a valid email address")
      .normalizeEmail()
      .notEmpty()
      .withMessage("Email is required"),

    body("password", "Please enter valid password")
      .trim()
      .isLength({ min: 8 })
      .withMessage("Password must be at least 8 characters long")
      .matches(/[a-z]/)
      .withMessage("Password must contain at least one lowercase letter")
      .matches(/[A-Z]/)
      .withMessage("Password must contain at least one uppercase letter")
      .matches(/[0-9]/)
      .withMessage("Password must contain at least one number")
      .matches(/[@$!%*?&#]/)
      .withMessage(
        "Password must contain at least one special character (@, $, !, %, *, ?, &, #)"
      ),

    body("name", "Please enter a valid name")
      .trim()
      .isLength({ min: 2 })
      .withMessage("Name must be at least 2 characters long")
      .matches(/^[a-zA-Z\s]+$/)
      .withMessage("Name can only contain letters and spaces"),
  ],
  authController.signUp,
  mailer.sent
);

router.post(
  "/login",
  [
    body("email")
      .isEmail()
      .withMessage("Please enter a valid email address")
      .normalizeEmail()
      .notEmpty()
      .withMessage("Email is required"),

    body("password", "Please enter valid password")
      .trim()
      .isLength({ min: 8 })
      .withMessage("Password must be at least 8 characters long")
      .matches(/[a-z]/)
      .withMessage("Password must contain at least one lowercase letter")
      .matches(/[A-Z]/)
      .withMessage("Password must contain at least one uppercase letter")
      .matches(/[0-9]/)
      .withMessage("Password must contain at least one number")
      .matches(/[@$!%*?&#]/)
      .withMessage(
        "Password must contain at least one special character (@, $, !, %, *, ?, &, #)"
      ),
  ],
  authController.logIn
);

router.post(
  "/forgotpassword",
  [
    body("email")
      .isEmail()
      .withMessage("Please enter a valid email address")
      .normalizeEmail()
      .notEmpty()
      .withMessage("Email is required"),
  ],
  authController.forgotPassword,
  mailer.sent
);

router.post(
  "/otpverify",
  [
    body("otp", "Please enter a valid OTP")
      .notEmpty()
      .withMessage("OTP cannot be empty")
      .isNumeric()
      .withMessage("OTP must be a number")
      .isLength({ min: 4, max: 4 })
      .withMessage("OTP must be exactly 4 digits long"),
  ],
  tokenverify.verifytoken,
  authController.otpVerify
);

router.put("/resendotp", tokenverify.verifytoken, mailer.sent);

router.put(
  "/changepassword",
  [
    body("newpassword", "Please enter valid password")
      .trim()
      .isLength({ min: 8 })
      .withMessage("Password must be at least 8 characters long")
      .matches(/[a-z]/)
      .withMessage("Password must contain at least one lowercase letter")
      .matches(/[A-Z]/)
      .withMessage("Password must contain at least one uppercase letter")
      .matches(/[0-9]/)
      .withMessage("Password must contain at least one number")
      .matches(/[@$!%*?&#]/)
      .withMessage(
        "Password must contain at least one special character (@, $, !, %, *, ?, &, #)"
      ),
  ],
  tokenverify.verifytoken,
  authController.changePassword
);

module.exports = router;
